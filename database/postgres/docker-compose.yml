# --- TO EXECUTE THIS FILE ---
# 1- To create and start containers use the following command:
#    docker-compose up
#    (you can use the "-d" argument to run in "detached" mode).
# 2- To stop and remove containers, networks, images, and volumes:
#    docker-compose down
#    (you can use the "-v" argument to remove "volumes" created by docker-compose up).
# 3- Browse to: http://localhost:8080/ and add a new server in PgAdmin with Host name 'postgresdbsrv' or 
#    browse to: http://localhost:8081/ and connect to system 'Postgres' with 'postgres' user ID.

# https://docs.docker.com/compose/reference/
# https://docs.docker.com/compose/overview/

# Example taken from https://github.com/khezen/compose-postgres
# https://hub.docker.com/_/postgres
# https://hub.docker.com/r/dpage/pgadmin4/
# https://hub.docker.com/_/adminer/

version: '3.9'

services:
  postgresdb:
    container_name: postgres_container1
    image: postgres:latest
    hostname: postgresdbsrv
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-rootPwd1}
      PGDATA: /data/postgres
    volumes:
       - pgTestData:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - pgTestNetwork
    restart: always
  
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin_container1
    hostname: pgadmin_host1
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-pgadmin4Pwd1}  # TODO: change this to a secure password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgTestAdminData:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    networks:
      - pgTestNetwork
    restart: always

  adminer:
    image: adminer:latest
    container_name: adminer_container1
    hostname: adminer1
    restart: always
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_SERVER: postgresdb
      ADMINER_DESIGN: mvt
    ports:
      - 8081:8080
    networks:
      - pgTestNetwork

networks:
  pgTestNetwork:
    driver: bridge

volumes:
    pgTestData:
    pgTestAdminData:
